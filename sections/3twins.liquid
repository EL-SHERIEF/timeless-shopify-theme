{% schema %}
{
  "name": "Image Grid",
  "settings": [
    {
      "type": "text",
      "id": "header",
      "label": "Header",
      "default": "Start designing your dream project."
    },
    {
      "type": "text",
      "id": "tag",
      "label": "small tag",
      "default": "small tag"
    },
    {
      "type": "text",
      "id": "subheader",
      "label": "Subheader",
      "default": "Create beautiful designs for websites, apps, and more, directly in your browser."
    },
    {
      "type": "checkbox",
      "id": "show_cta",
      "label": "Show CTA",
      "default": true
    },
    {
      "type": "url",
      "id": "cta_link",
      "label": "CTA Link",
      "default": "/",
      "info": "Only visible if 'Show CTA' is enabled."
    },
    {
      "type": "text",
      "id": "cta_text",
      "label": "CTA Button Text",
      "default": "Start for Free",
      "info": "Only visible if 'Show CTA' is enabled."
    }
  ],
  "blocks": [
    {
      "type": "image",
      "name": "Image",
      "settings": [
        {
          "type": "image_picker",
          "id": "image",
          "label": "Select Image"
        },
        {
          "type": "text",
          "id": "image_text",
          "label": "Image Text",
          "default": "Default caption"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Image Grid"
    }
  ]
}
{% endschema %}

<div class="image-grid-section">
  <!-- Header & CTA -->
  <div class="image-grid-header">
    <span class="tag">{{ section.settings.tag }}</span>
    <h1>{{ section.settings.header }}</h1>
    <p>{{ section.settings.subheader }}</p>

    {% if section.settings.show_cta %}
      <a href="{{ section.settings.cta_link }}" class="cta-button">
        {{ section.settings.cta_text }} <span>â†’</span>
      </a>
    {% endif %}
  </div>

  <!-- Image Grid -->
  <div class="image-grid">
    {% for block in section.blocks %}
      {% if block.settings.image %}
        <div class="image-item">
          <img src="{{ block.settings.image | img_url: 'large' }}" alt="Image">
          <span class="image-caption">{{ block.settings.image_text }}</span>
        </div>
      {% endif %}
    {% endfor %}
  </div>
</div>

<style>
  /* Tag styling */
  .tag {
    color: #111111;
    font-size: 16px;
    text-align: center;
    font-weight: 800;
    margin: 7px 0;
  }
  
  /* Caption overlay */
  .image-item .image-caption {
    position: absolute;
    top: 20px;
    left: 50%;
    transform: translate(-50%, 0);
    border-radius: 500px;
    font-size: 14px;
    background-color: white;
    color: #111111;
    text-align: center;
    font-weight: 900;
    padding: 4px 14px;
    border: solid 1px rgba(34, 34, 34, 0);
  }
  
  /* Main container */
  .image-grid-section {
    max-width: 1300px;
    width: 100%;
    text-align: center;
    padding: 40px 20px;
    margin: 40px auto;
    border-radius: 16px;
  }
  
  /* Header & CTA container */
  .image-grid-header {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    max-width: 600px;
    margin: 40px auto;
    padding-top: 20px;
  }
  
  .image-grid-header h1 {
    font-size: 2.8rem;
    line-height: 1.1;
    margin-bottom: 20px;
    font-weight: 900;
    color: #111111;
  }
  
  .image-grid-header p {
    font-size: 1.2rem;
    color: #111111;
    margin-bottom: 20px;
  }
  
  .cta-button {
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
    gap: 10px;
    width: fit-content;
    padding: 13px 24px;
    background-color: #fff;
    color: #333;
    font-weight: bold;
    border-radius: 50px;
    text-decoration: none;
    font-size: 1rem;
    transition: all 0.3s ease;
  }
  
  .cta-button:hover {
    background-color: #f0f0f0;
    gap: 25px;
  }
  
  /* Image Grid */
  .image-grid {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 20px; /* gap remains unchanged */
    margin-top: 30px;
  }
  
  .image-item {
    position: relative;
    display: flex;
    flex-direction: column;
    align-items: center;
  }
  
  .image-item img {
    width: 100%;
    height: auto;
    object-fit: cover;
    border-radius: 24px;
  }
  
  .image-item:nth-child(1)::after {
    content: '';
    position: absolute;
    top: -8px;
    left: -8px;
    width: calc(100% + 16px);
    height: calc(100% + 16px);
    background: #111111;
    border-radius: 28px;
    display: block;
    z-index: -1;
    pointer-events: none;
  }
  
  /* Responsive breakpoints */
  /* For viewports between 769px and 1024px: two-column grid & reduced typography */
  @media (max-width: 1024px) and (min-width: 769px) {
    .image-grid {
      grid-template-columns: repeat(2, 1fr);
    }
    .image-grid-header h1 {
      font-size: 2.4rem;
    }
    .image-grid-header p {
      font-size: 1.1rem;
    }
  }
  
  /* For viewports 768px and below: one-column grid & compressed vertical spacing, but gap remains the same */
  @media (max-width: 768px) {
    .image-grid-section {
      padding: 20px 10px;
      margin: 20px auto;
    }
    .image-grid-header {
      margin: 10px auto;
      padding-top: 5px;
    }
    .image-grid-header h1 {
      font-size: 2rem;
      margin-bottom: 10px;
    }
    .image-grid-header p {
      font-size: 1rem;
      margin-bottom: 10px;
    }
    .cta-button {
      padding: 8px 16px;
      font-size: 0.9rem;
    }
    .image-grid {
      grid-template-columns: 1fr;
      /* Gap remains 20px */
    }
  }
  
  /* Fluid typography using clamp() */
  .image-grid-header h1 {
    font-size: clamp(1.8rem, 4vw, 2.8rem);
  }
  .image-grid-header p {
    font-size: clamp(1rem, 2.5vw, 1.2rem);
  }
</style>
