<header class="mb-12 rte">
  <h1>{{ page_title }}</h1>

  {% render 'add-address' %}
</header>

<div class="grid gap-4">
  {% paginate customer.addresses by section.settings.page_size %}
    <ul class="grid sm:grid-cols-[repeat(auto-fill,minmax(300px,1fr))] gap-y-8 gap-x-12">
      {%- for address in customer.addresses -%}
        {%- liquid
          if customer.default_address.summary == address.summary
            assign is_default = true
          else
            assign is_default = false
          endif
        -%}

        <li class="relative {% if is_default %}-order-1{% endif %}">
          {%- if is_default -%}
            <div class="technical text-xs absolute left-0 bottom-full mb-1">Default</div>
          {%- endif -%}

          <input id="address-edit-{{ address.id }}" type="checkbox" hidden>

          {% render 'address' with address %}

          <div class="flex flex-wrap gap-x-4 mt-2 pl-3 border-l-2 border-stroke">
            {% render 'edit-address', address: address %}

            <form
              class="[[open]+&]:hidden"
              method="post"
              action="/account/addresses/{{ address.id }}"
              onsubmit="return confirm('Are you sure you want to delete this address?\n\n{{ address.summary }}')"
            >
              <input type="hidden" name="_method" value="delete">
              <button class="link">Delete</button>
            </form>
          </div>
        </li>
      {%- endfor -%}
    </ul>

    {%- if paginate.pages > 1 -%}
      <nav class="pagination">{{ paginate | default_pagination }}</nav>
    {%- endif -%}
  {% endpaginate %}
</div>

<script defer>
  (function(){
    const addressForms = document.querySelectorAll('form[id][action*="/account/addresses"]')
    addressForms.forEach(form => {
      const countrySelect = form.querySelector('[name="address[country]"]')
      const provinceSelect = form.querySelector('[name="address[province]"]')

      // Populate provinces
      countrySelect.addEventListener('change', ({ target }) => {
        const provinces = JSON.parse(target.selectedOptions[0].dataset.provinces)

        provinceSelect.innerHTML = ''
        provinces.forEach(province => {
          const option = document.createElement('option')
          option.value = province[0]
          option.textContent = province[1]
          provinceSelect.appendChild(option)
        })
      })

      if (!!countrySelect.dataset.default) {
        countrySelect.value = countrySelect.dataset.default
        countrySelect.dispatchEvent(new Event('change'))
      }

      if (!!provinceSelect.dataset.default) {
        provinceSelect.value = provinceSelect.dataset.default
      }
    })
  })()
</script>

{% schema %}
{
  "name": "Addresses",
  "tag": "section",
  "class": "section",
  "settings": [
    {
      "type": "number",
      "id": "page_size",
      "label": "Orders per page",
      "default": 12
    }
  ]
}
{% endschema %}
