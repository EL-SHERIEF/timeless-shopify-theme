{%- liquid
  if product.has_only_default_variant
    assign p = product
  else
    assign p = product.selected_or_first_available_variant
  endif

  assign sku = product.selected_or_first_available_variant.sku
-%}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@10/swiper-bundle.min.css">

<div class="section-product-form section grid sm:grid-cols-2 items-start gap-8">
  {% render 'product-image-carousel' %}

  {% form 'product', product, class: 'grid gap-3' %}
    {%- for block in section.blocks -%}
      {%- case block.type -%}
        {%- when '@app' -%}
          {% render block %}

        {%- when 'buy-button' -%}
          <div>
            <button class="action w-full {% unless block.settings.full_width %}md:w-auto{% endunless %}" type="submit">
              {{ block.settings.text | default: 'Add to cart' | escape }}
              {%- if block.settings.inventory_text != blank -%}
                {% render 'inventory', text: block.settings.inventory_text %}
              {%- endif -%}
            </button>
          </div>

          {%- if block.settings.show_payment_buttons -%}
            {{ form | payment_button }}
          {%- endif -%}

        {%- when 'custom-liquid' -%}
          <div>{{ block.settings.liquid }}</div>

        {%- when 'description' -%}
          <div class="rte {{ block.settings.tailwind | default: '<md:text-sm' }}">
            {{ product.description }}
          </div>

        {%- when 'divider' -%}
          {%- if block.settings.label != blank -%}
            <h2 class="divider technical text-xs mt-4">
              <span>{{ block.settings.label }}</span>
            </h2>
          {%- else -%}
            <hr class="my-4" />
          {%- endif -%}

        {%- when 'inventory' -%}
          <p
            class="{{ block.settings.tailwind | default: 'text-sm text-center md:text-left' }}"
            {% if block.settings.threshold_enabled %}
              data-inventory-threshold="{{ block.settings.threshold }}"
              {% if p.inventory_quantity > block.settings.threshold %}hidden{% endif %}
            {% endif %}
          >
            {% render 'inventory', text: block.settings.text %}
          </p>

        {%- when 'price' -%}
          {%- render 'price' -%}

          {{ form | payment_terms }}

        {%- when 'quantity-selector' -%}
          <label class="justify-self-start">
            <span class="technical text-xs">Quantity</span>
            {% render 'quantity-selector' %}
          </label>

        {%- when 'richtext' -%}
          <div class="rte {{ block.settings.tailwind }}">{{ block.settings.richtext }}</div>

        {%- when 'sku' -%}
          <p class="text-ink-subdued" data-sku-container {% if sku == blank %}hidden{% endif %}>
            <small>SKU: <code data-sku>{{ sku }}</code></small>
          </p>

        {%- when 'tags' -%}
          {%- if product.tags.size > 0 -%}
            <div class="flex flex-wrap gap-x-4 {{ block.settings.tailwind }}">
              {%- for tag in product.tags -%}
                <span class="hashtag">{{ tag }}</span>
              {%- endfor -%}
            </div>
          {%- endif -%}

        {%- when 'title' -%}
          <h1 class="h1">{{ product.title }}</h1>

        {%- when 'variant-selector' -%}
          {% render 'variant-selector', show_dividers: block.settings.show_dividers %}

        {%- when 'vendor' -%}
          <p class="{{ block.settings.tailwind | default: 'technical text-xs' }}">{{ product.vendor }}</p>

      {%- endcase -%}
    {%- endfor -%}
  {% endform %}
</div>

<style type="text/tailwindcss">
  .section-product-form > * {
    min-width: 0;
    @apply sm:self-start sm:sticky-below-header
  }

  .product-thumbs .swiper-slide {
    @apply relative transition-transform;

    &::after {
      content: '';
      position: absolute;
      inset: 0;
      @apply bg-primary opacity-0 transition-opacity;
    }
  }

  .product-thumbs .swiper-slide:is(.swiper-slide-thumb-active, :hover)::after {
    @apply opacity-20;
  }

  .product-thumbs .swiper-slide:not(:is(.swiper-slide-thumb-active)) {
    @apply scale-75;
  }
</style>

<script type="module" defer>
  import Swiper from 'https://cdn.jsdelivr.net/npm/swiper@10/swiper-bundle.min.mjs'

  const { format: formatMoney } = new Intl.NumberFormat('{{ request.locale.iso_code }}', {
    style: 'currency',
    currency: '{{ shop.currency }}',
    minimumFractionDigits: 2,
    maximumFractionDigits: 2
  })

  const thumbs = new Swiper('#shopify-section-{{ section.id }} .product-thumbs', {
    slidesPerView: {{ section.settings.carousel_slidesPerView }},
    spaceBetween: 1,
    watchSlidesProgress: true,
    on: {
      init: function() {
        this.el.removeAttribute('hidden')
      },
    }
  })

  const swiper = new Swiper('#shopify-section-{{ section.id }} .product-images', {
    thumbs: {
      swiper: thumbs,
    },
    autoHeight: {{ section.settings.carousel_autoHeight }},
    zoom: {{ section.settings.carousel_zoom_enabled }},
  })

  const productForm = document.querySelector('#shopify-section-{{ section.id }} form')
  const variantSelector = productForm.querySelector('select[name="id"]')

  if (!!variantSelector) {
    // initialize options (populate on page load)
    const selectedOptions = variantSelector?.selectedOptions[0].dataset
    for (const [key, value] of Object.entries(selectedOptions)) {
      const option = productForm.querySelector(`[name="${ key }"][value="${ value }"]`)
      if (!!option) option.checked = true
    }

    productForm.addEventListener('input', () => {
      const formData = new FormData(productForm)

      const selector = Array.from(formData.keys())?.reduce((acc, key) => {
        if (/option[123]/g.test(key)) {
          acc += `[data-${ key }="${ formData.get(key) }"]`
        }
        return acc
      }, 'option')

      const newValue = productForm.querySelector(selector)?.value
      if (!!newValue) {
        // update <select name="id">
        variantSelector.value = newValue

        // update [data-*]
        const [selectedOption] = variantSelector.selectedOptions
        const selected = JSON.parse(selectedOption.innerHTML)

        productForm.querySelectorAll('[data-sku]').forEach(elem => {
          elem.textContent = selected.sku

          if (!!selected.sku) {
            elem.closest('[data-sku-container]').removeAttribute('hidden')
          } else {
            elem.closest('[data-sku-container]').setAttribute('hidden', '')
          }
        })

        productForm.querySelectorAll('[data-price]').forEach(elem => elem.textContent = formatMoney(selected.price / 100))

        productForm.querySelectorAll('[data-compare-at-price]').forEach(elem => {
          elem.textContent = formatMoney(selected.compare_at_price / 100)

          // toggle data-compare-at-price
          if (selected.price < selected.compare_at_price) {
            elem.removeAttribute('hidden')
          } else {
            elem.setAttribute('hidden', '')
          }
        })

        productForm.querySelectorAll('[data-inventory-quantity]').forEach(elem => {
          elem.textContent = selectedOption.dataset.inventory || 0

          // toggle depending on threshold
          const wrapper = elem.closest('[data-inventory-threshold]')
          if (wrapper?.dataset.inventoryThreshold) {
            if (selectedOption.dataset.inventory > Number(wrapper.dataset.inventoryThreshold)) {
              wrapper.setAttribute('hidden', '')
            } else {
              wrapper.removeAttribute('hidden')
            }
          }
        })

        updateSwiper(newValue)
      }
    })
  }

  function updateSwiper(variantId) {
    const variantImage = document.querySelector(`[data-variant-id="${ variantId }"]`)
    if (!!variantImage) {
      const index = Array.from(variantImage.parentNode.children).indexOf(variantImage)
      swiper.slideTo(index)
    }
  }
  updateSwiper({{ product.selected_or_first_available_variant.id }})
</script>

{% schema %}
{
  "name": "Product form",
  "tag": "article",
  "class": "section-product-form",
  "limit": 1,
  "settings": [
    {
      "type": "header",
      "content": "Carousel",
      "info": "This theme uses [Swiper](https://swiperjs.com/) for carousels. Refresh the page to see the results."
    },
    {
      "type": "checkbox",
      "id": "carousel_zoom_enabled",
      "label": "Enable zoom",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "carousel_autoHeight",
      "label": "Auto height",
      "default": true
    },
    {
      "type": "range",
      "id": "carousel_slidesPerView",
      "min": 4,
      "max": 12,
      "label": "Slides per view",
      "default": 8
    }
  ],
  "blocks": [
    {
      "type": "@app"
    },
    {
      "name": "*Buy button",
      "type": "buy-button",
      "settings": [
        {
          "type": "text",
          "id": "text",
          "label": "Text",
          "placeholder": "Add to cart"
        },
        {
          "type": "text",
          "id": "inventory_text",
          "label": "Inventory text",
          "info": "\"#\" will be replaced with the actual inventory quantity. Leave blank to hide.",
          "default": "(# left)",
          "placeholder": "(# left)"
        },
        {
          "type": "checkbox",
          "id": "full_width",
          "label": "Full width",
          "default": false,
          "info": "On tablet and desktop viewports"
        },
        {
          "type": "checkbox",
          "id": "show_payment_buttons",
          "label": "Show Shopify payment buttons",
          "default": false
        },
        {
          "type": "header",
          "content": "* Required block",
          "info": "Needs to be included for the product form to work"
        }
      ]
    },
    {
      "name": "Custom liquid",
      "type": "custom-liquid",
      "settings": [
        {
          "type": "liquid",
          "id": "liquid",
          "label": "Liquid"
        }
      ]
    },
    {
      "name": "Description",
      "type": "description",
      "limit": 1,
      "settings": [
        {
          "type": "liquid",
          "id": "tailwind",
          "label": "Tailwind classes",
          "info": "Default: \"<md:text-sm\""
        }
      ]
    },
    {
      "name": "Divider",
      "type": "divider",
      "settings": [
        {
          "type": "text",
          "id": "label",
          "label": "Label"
        }
      ]
    },
    {
      "name": "Inventory",
      "type": "inventory",
      "settings": [
        {
          "type": "text",
          "id": "text",
          "label": "Text",
          "info": "\"#\" will be replaced with the actual inventory quantity",
          "default": "Only # left in stock!",
          "placeholder": "Only # left in stock!"
        },
        {
          "type": "checkbox",
          "id": "threshold_enabled",
          "label": "Enable threshold",
          "default": true,
          "info": "Only show when inventory is below the threshold"
        },
        {
          "type": "number",
          "id": "threshold",
          "label": "Threshold",
          "default": 10
        },
        {
          "type": "liquid",
          "id": "tailwind",
          "label": "Tailwind classes",
          "info": "Default: \"text-sm text-center md:text-left\""
        }
      ]
    },
    {
      "name": "Price",
      "type": "price",
      "limit": 1,
      "settings": []
    },
    {
      "name": "*Quantity selector",
      "type": "quantity-selector",
      "limit": 1,
      "settings": [
        {
          "type": "header",
          "content": "* Required block",
          "info": "Needs to be included for the product form to work"
        }
      ]
    },
    {
      "name": "Richtext",
      "type": "richtext",
      "settings": [
        {
          "type": "richtext",
          "id": "richtext",
          "label": "Richtext"
        },
        {
          "type": "liquid",
          "id": "tailwind",
          "label": "Tailwind classes"
        }
      ]
    },
    {
      "name": "SKU",
      "type": "sku",
      "limit": 1,
      "settings": []
    },
    {
      "name": "Tags",
      "type": "tags",
      "limit": 1,
      "settings": [
        {
          "type": "liquid",
          "id": "tailwind",
          "label": "Tailwind classes"
        }
      ]
    },
    {
      "name": "Title",
      "type": "title",
      "limit": 1,
      "settings": []
    },
    {
      "name": "*Variant selector",
      "type": "variant-selector",
      "limit": 1,
      "settings": [
        {
          "type": "checkbox",
          "id": "show_dividers",
          "label": "Show dividers",
          "default": false
        },
        {
          "type": "header",
          "content": "* Required block",
          "info": "Needs to be included for the product form to work"
        }
      ]
    },
    {
      "name": "Vendor",
      "type": "vendor",
      "limit": 1,
      "settings": [
        {
          "type": "liquid",
          "id": "tailwind",
          "label": "Tailwind classes",
          "info": "Default: \"technical text-xs\""
        }
      ]
    }
  ]
}
{% endschema %}
